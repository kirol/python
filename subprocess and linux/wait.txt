We should use communicate instead of wait

Popen.wait(timeout=None)

Wait for child process to terminate. Set and return returncode attribute. Warning This will deadlock when using stdout=PIPE and/or stderr=PIPE and the child process generates enough output to a pipe such that it blocks waiting for the OS pipe buffer to accept more data. Use communicate() to avoid that.
Which makes me think I should use communicate as the amount of data from stdout is quite large. However, reading the documentation again shows this:

Popen.communicate(input=None, timeout=None)...

Interact with process: Send data to stdin. Read data from stdout and stderr, until end-of-file is reached.

Note The data read is buffered in memory, so do not use this method if the data size is large or unlimited.